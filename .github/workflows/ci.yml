name: Flask CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  FLASK_ENV: testing
  DATABASE_URL: sqlite:///test.db

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest bandit safety flake8 pytest-cov
    
    - name: Lint code
      run: |
        flake8 app/ --count --select=E9,F63,F7 --show-source --statistics
        flake8 app/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run security scan
      run: |
        bandit -r app/ -f json -o bandit-report.json || true
        safety scan || true
    
    - name: Run tests
      run: |
        pytest test/ -v --cov=app --cov-report=xml
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  docker-build:
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t chedazangmo/miniproject:latest .
    
    - name: Run container tests
      run: |
        docker run -d -p 5000:5000 --name ci-test chedazangmo/miniproject:latest
        sleep 15
        
        # Test health endpoint
        curl -f http://localhost:5000/health
        
        # Test authentication flow
        curl -X POST http://localhost:5000/auth/register \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "username=ciuser&password=cipass123&confirm_password=cipass123" || true
        
        docker stop ci-test
        docker rm ci-test
    
    - name: Push to Docker Hub (optional)
      if: github.ref == 'refs/heads/main'
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push chedazangmo/miniproject:latest